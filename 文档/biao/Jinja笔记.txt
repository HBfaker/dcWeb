变量的访问
{{ foo.bar }}
{{ foo['bar'] }}


循环

{% for user in users %}
  <li>{{ user.username|e }}</li>
{% endfor %}

因为模板中的变量保留它们的对象属性，可以迭代像 dict 的容器
{% for key, value in my_dict.iteritems() %}
    <dt>{{ key|e }}</dt>
    <dd>{{ value|e }}</dd>
{% endfor %}

在一个 for 循环块中你可以访问这些特殊的变量
loop.index	                        当前循环迭代的次数（从 1 开始）
loop.index0	                        当前循环迭代的次数（从 0 开始）
loop.revindex	                    到循环结束需要迭代的次数（从 1 开始）
loop.revindex0	                    到循环结束需要迭代的次数（从 0 开始）
loop.first	                        如果是第一次迭代，为 True 。
loop.last	                        如果是最后一次迭代，为 True 。
loop.length	                        序列中的项目数。
loop.cycle	                        在一串序列间期取值的辅助函数。见下面的解释。


{% for user in users if not user.hidden %}
    <li>{{ user.username|e }}</li>
{% endfor %}


{% for user in users %}
    <li>{{ user.username|e }}</li>
{% else %}
    <li><em>no users found</em></li>
{% endfor %}

迭代
{%- for item in sitemap recursive %}
    <li><a href="{{ item.href|e }}">{{ item.title }}</a>
    {%- if item.children -%}
        <ul class="submenu">{{ loop(item.children) }}</ul>
    {%- endif %}</li>
{%- endfor %}



if

{% if users %}
<ul>
{% for user in users %}
    <li>{{ user.username|e }}</li>
{% endfor %}
</ul>
{% endif %}


多个分支
{% if kenny.sick %}
    Kenny is sick.
{% elif kenny.dead %}
    You killed Kenny!  You bastard!!!
{% else %}
    Kenny looks okay --- so far
{% endif %}