[]代表list
()代表元组。里面的元素不变。相当于Java中的final关键字

包：包含一个或多个模块。包下有个_init__.py模块初始化
模块：***.py

py中的函数参数：
位置参数
def power(x):
    return x * x

默认参数
def power(x, n=2):
    s = 1
    while n > 0:
        n = n - 1
        s = s * x
    return s

可变参数:允许你传入0个或任意个参数
参数numbers接收到的是一个tuple
def calc(*numbers):
    sum = 0
    for n in numbers:
        sum = sum + n * n
    return sum

关键字参数:你传入0个或任意个****含参数名*****的参数,关键字参数在函数内部自动组装为一个dict。
def person(name, age, **kw):
    print('name:', name, 'age:', age, 'other:', kw)
person('Adam', 45, gender='M', job='Engineer')


命名关键字参数：限制关键字参数的名字。例如，只接收city和job作为关键字参数
def person(name, age, *, city, job):
    print(name, age, city, job)
person('Jack', 24, city='Beijing', job='Engineer')


参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。



py中函数的返回值
返回多个值
def move(x, y, step, angle=0):
    nx = x + step * math.cos(angle)
    ny = y - step * math.sin(angle)
    return nx, ny

x, y = move(100, 100, 60, math.pi / 6)
其实这只是一种假象，Python函数返回的仍然是单一值
Python的函数返回多值其实就是返回一个tuple，但写起来更方便，而多个变量可以同时接收一个tuple，按位置赋给对应的值